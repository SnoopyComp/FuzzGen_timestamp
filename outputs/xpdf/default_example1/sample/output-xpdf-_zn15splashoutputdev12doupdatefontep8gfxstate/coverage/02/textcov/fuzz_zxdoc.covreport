LLVMFuzzerTestOneInput:
   28|      8|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   29|      8|auto start_target = std::chrono::high_resolution_clock::now();
   30|      8|    FuzzedDataProvider stream(data, size);
   31|       |
   32|       |    // Create an instance of SplashOutputDev
   33|      8|    SplashOutputDev splashOutputDev;
   34|       |
   35|       |    // Initialize GfxState
   36|      8|    GfxState gfxState;
   37|       |
   38|       |    // Consume data for GfxState parameters
   39|      8|    gfxState.some_int = stream.ConsumeIntegral<int>();
   40|      8|    gfxState.some_float = stream.ConsumeFloatingPoint<float>();
   41|       |
   42|       |    // Consume a random length for some_data
   43|      8|    size_t data_length = stream.ConsumeIntegralInRange<size_t>(1, 1024); // Avoid 0 length
   44|      8|    gfxState.some_data = stream.ConsumeBytes<uint8_t>(data_length);
   45|       |
   46|       |    // Call the function under test
   47|      8|	auto start_func = std::chrono::high_resolution_clock::now();
   48|      8|    splashOutputDev.doUpdateFont(&gfxState);
   49|      8|	auto end_func = std::chrono::high_resolution_clock::now();
   50|      8|auto end_target = std::chrono::high_resolution_clock::now();
   51|      8|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   52|       |
   53|      8|    return 0;
   54|      8|}
_ZN8GfxStateC2Ev:
   17|      8|    GfxState() : some_int(0), some_float(0.0f) {}
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   23|      8|    void doUpdateFont(GfxState *gfxState) {
   24|       |        // Function implementation (not provided)
   25|      8|    }

