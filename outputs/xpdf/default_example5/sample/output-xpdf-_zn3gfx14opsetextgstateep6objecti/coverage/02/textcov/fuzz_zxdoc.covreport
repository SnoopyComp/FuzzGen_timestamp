_ZN3Gfx14opSetExtGStateEP6Objecti:
   27|      1|    void opSetExtGState(Object *obj, int value) {
   28|       |        // Function implementation (not shown here)
   29|      1|        if (obj) {
  ------------------
  |  Branch (29:13): [True: 1, False: 0]
  ------------------
   30|      1|            obj->setState(value); // Example usage of the Object
   31|      1|        }
   32|      1|    }
LLVMFuzzerTestOneInput:
   35|      1|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   36|      1|auto start_target = std::chrono::high_resolution_clock::now();
   37|      1|    FuzzedDataProvider fuzzed_data(data, size);
   38|       |
   39|       |    // Create a unique pointer to an instance of Object
   40|      1|    std::unique_ptr<Object> obj = std::make_unique<Object>();
   41|       |
   42|       |    // Consume an integer value from the fuzz input, ensuring it is within a reasonable range
   43|      1|    int int_value = fuzzed_data.ConsumeIntegralInRange<int>(-1000, 1000); // Adjust range as needed
   44|       |
   45|       |    // Call the function under test with the Object instance and the fuzzed integer value
   46|      1|	auto start_func = std::chrono::high_resolution_clock::now();
   47|      1|    Gfx::opSetExtGState(obj.get(), int_value);
   48|      1|	auto end_func = std::chrono::high_resolution_clock::now();
   49|       |
   50|       |    // Optionally, consume more data to explore different states or behaviors
   51|       |    // For example, we can also manipulate the state directly
   52|      1|    if (fuzzed_data.ConsumeBool()) {
  ------------------
  |  Branch (52:9): [True: 0, False: 1]
  ------------------
   53|      0|        int additional_state = fuzzed_data.ConsumeIntegralInRange<int>(-1000, 1000);
   54|      0|        obj->setState(additional_state);
   55|      0|        Gfx::opSetExtGState(obj.get(), obj->state);
   56|      0|    }
   57|      1|auto end_target = std::chrono::high_resolution_clock::now();
   58|      1|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   59|       |
   60|      1|    return 0;
   61|      1|}
_ZN6Object8setStateEi:
   21|      1|    void setState(int newState) {
   22|      1|        state = newState; // Method to modify state
   23|      1|    }
_ZN6ObjectC2Ev:
   17|      1|    Object() : state(0) {
   18|       |        // Initialize Object as needed
   19|      1|    }

