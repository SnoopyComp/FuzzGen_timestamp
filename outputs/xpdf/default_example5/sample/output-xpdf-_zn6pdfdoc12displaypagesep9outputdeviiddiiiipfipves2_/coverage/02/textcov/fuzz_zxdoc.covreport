LLVMFuzzerTestOneInput:
   31|     22|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   32|     22|auto start_target = std::chrono::high_resolution_clock::now();
   33|     22|    FuzzedDataProvider stream(data, size);
   34|       |
   35|       |    // Initialize parameters for the function
   36|     22|    OutputDev outputDev; // Create an instance of OutputDev
   37|     22|    int pageStart = stream.ConsumeIntegralInRange<int>(1, 100); // Assuming valid page range
   38|     22|    int pageEnd = stream.ConsumeIntegralInRange<int>(pageStart, 100); // Ensure pageEnd is >= pageStart
   39|     22|    double zoomX = stream.ConsumeFloatingPoint<double>();
   40|     22|    double zoomY = stream.ConsumeFloatingPoint<double>();
   41|     22|    int rotation = stream.ConsumeIntegralInRange<int>(0, 360); // Rotation in degrees
   42|     22|    GBool print = stream.ConsumeBool();
   43|     22|    GBool annotate = stream.ConsumeBool();
   44|     22|    GBool render = stream.ConsumeBool();
   45|       |    
   46|       |    // Create a pointer for DW_TAG_subroutine_typeInfiniteLoop
   47|     22|    auto loopBytes = stream.ConsumeRandomLengthString(sizeof(DW_TAG_subroutine_typeInfiniteLoop));
   48|     22|    if (loopBytes.size() != sizeof(DW_TAG_subroutine_typeInfiniteLoop)) {
  ------------------
  |  Branch (48:9): [True: 18, False: 4]
  ------------------
   49|     18|        return 0; // Invalid size, do not proceed
   50|     18|    }
   51|      4|    DW_TAG_subroutine_typeInfiniteLoop *loop = reinterpret_cast<DW_TAG_subroutine_typeInfiniteLoop*>(const_cast<char*>(loopBytes.data()));
   52|       |
   53|       |    // Create a user data pointer
   54|      4|    auto userDataBytes = stream.ConsumeRemainingBytes<uint8_t>();
   55|      4|    void *userData = userDataBytes.data();
   56|       |
   57|       |    // Call the function under test
   58|      4|    PDFDoc pdfDoc; // Create an instance of PDFDoc
   59|      4|	auto start_func = std::chrono::high_resolution_clock::now();
   60|      4|    pdfDoc.displayPages(&outputDev, pageStart, pageEnd, zoomX, zoomY, rotation, print, annotate, render, loop, userData);
   61|      4|	auto end_func = std::chrono::high_resolution_clock::now();
   62|      4|auto end_target = std::chrono::high_resolution_clock::now();
   63|      4|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   64|       |
   65|      4|    return 0;
   66|     22|}
_ZN6PDFDoc12displayPagesEP9OutputDeviiddibbbPiPv:
   26|      4|    void displayPages(OutputDev *outputDev, int pageStart, int pageEnd, double zoomX, double zoomY, int rotation, GBool print, GBool annotate, GBool render, DW_TAG_subroutine_typeInfiniteLoop *loop, void *userData) {
   27|       |        // Function implementation
   28|      4|    }

