LLVMFuzzerTestOneInput:
   26|      3|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   27|      3|auto start_target = std::chrono::high_resolution_clock::now();
   28|      3|    FuzzedDataProvider stream(data, size);
   29|       |
   30|       |    // Initialize parameters for GfxState
   31|      3|    int param1 = stream.ConsumeIntegral<int>();
   32|      3|    float param2 = stream.ConsumeFloatingPoint<float>();
   33|       |
   34|       |    // Create a GfxState instance with the consumed parameters
   35|      3|    GfxState gfxState(param1, param2);
   36|       |
   37|       |    // Create an instance of SplashOutputDev
   38|      3|    SplashOutputDev splashOutputDev;
   39|       |
   40|       |    // Call the function under test
   41|      3|	auto start_func = std::chrono::high_resolution_clock::now();
   42|      3|    splashOutputDev.doUpdateFont(&gfxState);
   43|      3|	auto end_func = std::chrono::high_resolution_clock::now();
   44|      3|auto end_target = std::chrono::high_resolution_clock::now();
   45|      3|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   46|       |
   47|      3|    return 0;
   48|      3|}
_ZN8GfxStateC2Eif:
   14|      3|    GfxState(int param1, float param2) {
   15|       |        // Initialize members
   16|      3|    }
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   21|      3|    void doUpdateFont(GfxState *gfxState) {
   22|       |        // Implementation of the function (not shown here)
   23|      3|    }

