_ZN3Gfx14opSetExtGStateEP6Objecti:
   26|      6|    void opSetExtGState(Object *obj, int state) {
   27|       |        // Example implementation of the function
   28|       |        // This is where the actual logic would be
   29|       |        // You could use obj->property1 and obj->property2 in your logic
   30|      6|    }
LLVMFuzzerTestOneInput:
   33|      6|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   34|      6|auto start_target = std::chrono::high_resolution_clock::now();
   35|       |    // Create a FuzzedDataProvider to consume the input data
   36|      6|    FuzzedDataProvider fuzzed_data(data, size);
   37|       |
   38|       |    // Create an instance of Object (ensuring it's not NULL)
   39|      6|    Object obj;
   40|       |
   41|       |    // Consume an integer value for the state parameter
   42|      6|    int state = fuzzed_data.ConsumeIntegral<int>();
   43|       |
   44|       |    // Consume values to set properties of the Object
   45|      6|    int prop1 = fuzzed_data.ConsumeIntegral<int>();
   46|      6|    float prop2 = fuzzed_data.ConsumeFloatingPoint<float>();
   47|       |
   48|       |    // Set properties of the Object
   49|      6|    obj.setProperties(prop1, prop2);
   50|       |
   51|       |    // Call the function under test
   52|      6|	auto start_func = std::chrono::high_resolution_clock::now();
   53|      6|    Gfx::opSetExtGState(&obj, state);
   54|      6|	auto end_func = std::chrono::high_resolution_clock::now();
   55|      6|auto end_target = std::chrono::high_resolution_clock::now();
   56|      6|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   57|       |
   58|      6|    return 0;
   59|      6|}
_ZN6ObjectC2Ev:
   16|      6|    Object() : property1(0), property2(0.0f) {}
_ZN6Object13setPropertiesEif:
   19|      6|    void setProperties(int p1, float p2) {
   20|      6|        property1 = p1;
   21|      6|        property2 = p2;
   22|      6|    }

