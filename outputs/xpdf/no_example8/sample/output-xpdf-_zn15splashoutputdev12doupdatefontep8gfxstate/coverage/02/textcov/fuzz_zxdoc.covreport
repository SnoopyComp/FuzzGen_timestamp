LLVMFuzzerTestOneInput:
   31|     17|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   32|     17|auto start_target = std::chrono::high_resolution_clock::now();
   33|       |    // Create a FuzzedDataProvider to consume the fuzzing input
   34|     17|    FuzzedDataProvider fuzzed_data(data, size);
   35|       |
   36|       |    // Create an instance of GfxState
   37|     17|    GfxState gfxState;
   38|       |
   39|       |    // Initialize the GfxState object with fuzzed data
   40|     17|    gfxState.some_member = fuzzed_data.ConsumeIntegral<int>();
   41|     17|    gfxState.font_name = fuzzed_data.ConsumeRandomLengthString(10); // Random font name of up to 10 characters
   42|     17|    gfxState.font_size = fuzzed_data.ConsumeFloatingPoint<float>(); // Random font size
   43|       |
   44|       |    // Create an instance of SplashOutputDev
   45|     17|    SplashOutputDev splashOutputDev;
   46|       |
   47|       |    // Call the function under test
   48|     17|	auto start_func = std::chrono::high_resolution_clock::now();
   49|     17|    splashOutputDev.doUpdateFont(&gfxState);
   50|     17|	auto end_func = std::chrono::high_resolution_clock::now();
   51|     17|auto end_target = std::chrono::high_resolution_clock::now();
   52|     17|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   53|       |
   54|     17|    return 0;
   55|     17|}
_ZN8GfxStateC2Ev:
   19|     17|    GfxState() : some_member(0), font_size(12.0f) {}
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   25|     17|    void doUpdateFont(GfxState *gfxState) {
   26|       |        // Implementation of the function (not provided)
   27|       |        // Example logic that might use gfxState->font_name and gfxState->font_size
   28|     17|    }

