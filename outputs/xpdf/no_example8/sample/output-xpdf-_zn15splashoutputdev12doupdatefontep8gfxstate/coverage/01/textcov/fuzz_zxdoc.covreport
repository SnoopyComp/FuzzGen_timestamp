LLVMFuzzerTestOneInput:
   27|      8|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   28|      8|auto start_target = std::chrono::high_resolution_clock::now();
   29|      8|    FuzzedDataProvider fuzzed_data(data, size);
   30|       |
   31|       |    // Create an instance of SplashOutputDev
   32|      8|    SplashOutputDev splashOutputDev;
   33|       |
   34|       |    // Initialize GfxState
   35|      8|    GfxState gfxState;
   36|       |
   37|       |    // Consume data for GfxState members
   38|      8|    gfxState.fontID = fuzzed_data.ConsumeIntegral<int>();
   39|      8|    gfxState.fontSize = fuzzed_data.ConsumeFloatingPoint<float>();
   40|       |
   41|       |    // Consume random length for fontData
   42|      8|    size_t fontDataSize = fuzzed_data.ConsumeIntegralInRange<size_t>(1, 1024); // Ensure non-zero size
   43|      8|    gfxState.fontData = fuzzed_data.ConsumeBytes<uint8_t>(fontDataSize);
   44|       |
   45|       |    // Call the function under test
   46|      8|	auto start_func = std::chrono::high_resolution_clock::now();
   47|      8|    splashOutputDev.doUpdateFont(&gfxState);
   48|      8|	auto end_func = std::chrono::high_resolution_clock::now();
   49|      8|auto end_target = std::chrono::high_resolution_clock::now();
   50|      8|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   51|       |
   52|      8|    return 0;
   53|      8|}
_ZN8GfxStateC2Ev:
   16|      8|    GfxState() : fontID(0), fontSize(0.0f) {}
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   22|      8|    void doUpdateFont(GfxState *gfxState) {
   23|       |        // Function implementation
   24|      8|    }

