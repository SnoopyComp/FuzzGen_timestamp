LLVMFuzzerTestOneInput:
   29|      3|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   30|      3|auto start_target = std::chrono::high_resolution_clock::now();
   31|      3|    FuzzedDataProvider fuzzed_data(data, size);
   32|       |
   33|       |    // Create an instance of SplashOutputDev
   34|      3|    SplashOutputDev splashOutputDev;
   35|       |
   36|       |    // Initialize GfxState
   37|      3|    GfxState gfxState;
   38|       |
   39|       |    // Consume some data for GfxState initialization
   40|      3|    int data_value = fuzzed_data.ConsumeIntegral<int>();
   41|      3|    gfxState.setData(data_value);
   42|       |
   43|       |    // Call the function under test with a non-null GfxState
   44|      3|	auto start_func = std::chrono::high_resolution_clock::now();
   45|      3|    splashOutputDev.doUpdateFont(&gfxState);
   46|      3|	auto end_func = std::chrono::high_resolution_clock::now();
   47|       |
   48|       |    // Optionally, we can also consume more data to simulate different scenarios
   49|      3|    if (fuzzed_data.remaining_bytes() > 0) {
  ------------------
  |  Branch (49:9): [True: 1, False: 2]
  ------------------
   50|       |        // Example: consume some bytes and do something with them
   51|      1|        std::vector<uint8_t> additional_data = fuzzed_data.ConsumeBytes<uint8_t>(fuzzed_data.remaining_bytes());
   52|       |        // This could be used to modify the state or perform additional operations
   53|       |        // For example, we could simulate a font update based on additional_data
   54|      1|    }
   55|      3|auto end_target = std::chrono::high_resolution_clock::now();
   56|      3|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   57|       |
   58|      3|    return 0;
   59|      3|}
_ZN8GfxStateC2Ev:
   13|      3|    GfxState() : some_data(0) {}
_ZN8GfxState7setDataEi:
   14|      3|    void setData(int data) { some_data = data; }
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   22|      3|    void doUpdateFont(GfxState *gfxState) {
   23|       |        // Function implementation (not provided)
   24|       |        // This is where the actual logic would be.
   25|       |        // For demonstration, let's assume it does something with gfxState
   26|      3|    }

