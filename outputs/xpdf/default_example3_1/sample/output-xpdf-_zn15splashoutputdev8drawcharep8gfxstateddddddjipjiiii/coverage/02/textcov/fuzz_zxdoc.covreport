LLVMFuzzerTestOneInput:
   22|     43|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   23|     43|    FuzzedDataProvider stream(data, size);
   24|       |
   25|       |    // Initialize parameters for the function
   26|     43|    GfxState gfxState; // Non-null pointer, assuming default constructor is valid
   27|     43|    double x = stream.ConsumeFloatingPoint<double>();
   28|     43|    double y = stream.ConsumeFloatingPoint<double>();
   29|     43|    double width = stream.ConsumeFloatingPoint<double>();
   30|     43|    double height = stream.ConsumeFloatingPoint<double>();
   31|     43|    double ascent = stream.ConsumeFloatingPoint<double>();
   32|     43|    double descent = stream.ConsumeFloatingPoint<double>();
   33|     43|    CharCode charCode = stream.ConsumeIntegral<CharCode>();
   34|     43|    int fontSize = stream.ConsumeIntegral<int>();
   35|       |    
   36|       |    // Allocate Unicode array
   37|     43|    size_t unicodeCount = stream.ConsumeIntegralInRange<size_t>(1, 10); // At least 1 Unicode character
   38|     43|    std::vector<Unicode> unicodeArray(unicodeCount);
   39|    123|    for (size_t i = 0; i < unicodeCount; ++i) {
  ------------------
  |  Branch (39:24): [True: 80, False: 43]
  ------------------
   40|     80|        unicodeArray[i] = stream.ConsumeIntegral<Unicode>();
   41|     80|    }
   42|       |
   43|     43|    GBool flag1 = stream.ConsumeBool();
   44|     43|    GBool flag2 = stream.ConsumeBool();
   45|     43|    GBool flag3 = stream.ConsumeBool();
   46|       |
   47|       |    // Call the function under test
   48|     43|    SplashOutputDev().drawChar(&gfxState, x, y, width, height, ascent, descent, charCode, fontSize,
   49|     43|                                unicodeArray.data(), static_cast<int>(unicodeCount), flag1, flag2, flag3);
   50|       |
   51|     43|    return 0;
   52|     43|}
_ZN15SplashOutputDev8drawCharEP8GfxStateddddddjiPjibbb:
   17|     43|                  Unicode *unicode, int unicodeCount, GBool flag1, GBool flag2, GBool flag3) {
   18|       |        // Implementation of the function (mock implementation for fuzzing)
   19|     43|    }

