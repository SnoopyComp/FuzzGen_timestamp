LLVMFuzzerTestOneInput:
   38|     19|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   39|     19|auto start_target = std::chrono::high_resolution_clock::now();
   40|       |    // Create a FuzzedDataProvider instance
   41|     19|    FuzzedDataProvider fuzzed_data(data, size);
   42|       |
   43|       |    // Create a GfxState instance
   44|     19|    GfxState gfxState;
   45|       |
   46|       |    // Use fuzzed data to initialize gfxState
   47|     19|    int fontSize = fuzzed_data.ConsumeIntegralInRange<int>(1, 100); // Example range for font size
   48|     19|    std::string fontName = fuzzed_data.ConsumeRandomLengthString(49); // Max length is 49 to fit in fontName
   49|     19|    gfxState.setFontProperties(fontSize, fontName.c_str());
   50|       |
   51|       |    // Create an instance of SplashOutputDev
   52|     19|    SplashOutputDev splashOutputDev;
   53|       |
   54|       |    // Call the function under test
   55|     19|	auto start_func = std::chrono::high_resolution_clock::now();
   56|     19|    splashOutputDev.doUpdateFont(&gfxState);
   57|     19|	auto end_func = std::chrono::high_resolution_clock::now();
   58|     19|auto end_target = std::chrono::high_resolution_clock::now();
   59|     19|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   60|       |
   61|     19|    return 0;
   62|     19|}
_ZN8GfxStateC2Ev:
   17|     19|    GfxState() : fontSize(12) { // Default font size
   18|     19|        std::memset(fontName, 0, sizeof(fontName)); // Initialize fontName
   19|     19|    }
_ZN8GfxState17setFontPropertiesEiPKc:
   22|     19|    void setFontProperties(int size, const char* name) {
   23|     19|        fontSize = size;
   24|     19|        std::strncpy(fontName, name, sizeof(fontName) - 1);
   25|     19|        fontName[sizeof(fontName) - 1] = '\0'; // Ensure null termination
   26|     19|    }
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   31|     19|    void doUpdateFont(GfxState *state) {
   32|       |        // Implementation of the function
   33|       |        // For demonstration, we can just print the font size and name
   34|       |        // In a real scenario, this would update the font in some way
   35|     19|    }

