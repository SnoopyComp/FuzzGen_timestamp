LLVMFuzzerTestOneInput:
   26|     30|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   27|     30|auto start_target = std::chrono::high_resolution_clock::now();
   28|     30|    FuzzedDataProvider stream(data, size);
   29|       |
   30|       |    // Initialize parameters for the function
   31|     30|    OutputDev *outputDev = new OutputDev(); // Ensure this is not NULL
   32|     30|    int pageStart = stream.ConsumeIntegralInRange<int>(1, 100); // Example range for pages
   33|     30|    int pageEnd = stream.ConsumeIntegralInRange<int>(pageStart, 100); // Ensure pageEnd >= pageStart
   34|     30|    double zoomX = stream.ConsumeFloatingPoint<double>();
   35|     30|    double zoomY = stream.ConsumeFloatingPoint<double>();
   36|     30|    int rotation = stream.ConsumeIntegralInRange<int>(0, 360); // Rotation in degrees
   37|     30|    GBool renderAnnotations = stream.ConsumeBool();
   38|     30|    GBool renderForms = stream.ConsumeBool();
   39|     30|    GBool renderImages = stream.ConsumeBool();
   40|       |    
   41|       |    // Use ConsumeRandomLengthString for userData
   42|     30|    std::string userDataStr = stream.ConsumeRandomLengthString();
   43|     30|    void *userData = reinterpret_cast<void*>(const_cast<char*>(userDataStr.data())); // Non-NULL userData
   44|       |
   45|       |    // Allocate subroutine and ensure it's not NULL
   46|     30|    DW_TAG_subroutine_typeInfinite *subroutine = new DW_TAG_subroutine_typeInfinite(); // Ensure this is not NULL
   47|       |
   48|       |    // Call the function under test
   49|     30|    PDFDoc pdfDoc;
   50|     30|	auto start_func = std::chrono::high_resolution_clock::now();
   51|     30|    pdfDoc.displayPages(outputDev, pageStart, pageEnd, zoomX, zoomY, rotation, renderAnnotations, renderForms, renderImages, subroutine, userData);
   52|     30|	auto end_func = std::chrono::high_resolution_clock::now();
   53|       |
   54|       |    // Clean up allocated memory
   55|     30|    delete outputDev;
   56|     30|    delete subroutine;
   57|     30|auto end_target = std::chrono::high_resolution_clock::now();
   58|     30|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   59|       |
   60|     30|    return 0;
   61|     30|}
_ZN6PDFDoc12displayPagesEP9OutputDeviiddibbbPiPv:
   21|     30|                      DW_TAG_subroutine_typeInfinite *subroutine, void *userData) {
   22|       |        // Function implementation
   23|     30|    }

