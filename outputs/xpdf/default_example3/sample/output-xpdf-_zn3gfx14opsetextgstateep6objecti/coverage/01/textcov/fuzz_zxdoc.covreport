_ZN3Gfx14opSetExtGStateEP6Objecti:
   28|    282|    void opSetExtGState(Object *obj, int state) {
   29|       |        // Function implementation...
   30|       |        // For demonstration, we set the state in the Object
   31|    282|        obj->setState(state);
   32|    282|    }
LLVMFuzzerTestOneInput:
   35|     32|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   36|     32|auto start_target = std::chrono::high_resolution_clock::now();
   37|     32|    FuzzedDataProvider stream(data, size);
   38|       |
   39|       |    // Create an Object instance. Ensure it's not NULL.
   40|     32|    Object obj;
   41|       |
   42|       |    // Consume an integer value for the state parameter.
   43|     32|    int state = stream.ConsumeIntegral<int>();
   44|       |
   45|       |    // Call the function under test with the created Object and the consumed state.
   46|     32|	auto start_func = std::chrono::high_resolution_clock::now();
   47|     32|    Gfx::opSetExtGState(&obj, state);
   48|     32|	auto end_func = std::chrono::high_resolution_clock::now();
   49|       |
   50|       |    // Optionally, consume more data to create more diverse inputs
   51|       |    // For example, you might want to consume a few more integers to change the state
   52|    352|    for (int i = 0; i < 10; ++i) {
  ------------------
  |  Branch (52:21): [True: 320, False: 32]
  ------------------
   53|    320|        if (stream.remaining_bytes() > 0) {
  ------------------
  |  Branch (53:13): [True: 231, False: 89]
  ------------------
   54|    231|            int additionalState = stream.ConsumeIntegral<int>();
   55|    231|            Gfx::opSetExtGState(&obj, additionalState);
   56|    231|        }
   57|    320|    }
   58|       |
   59|       |    // Additional call to opSetExtGState with randomized input to maximize coverage
   60|     32|    if (stream.remaining_bytes() > 0) {
  ------------------
  |  Branch (60:9): [True: 19, False: 13]
  ------------------
   61|     19|        std::string randomInput = stream.ConsumeRandomLengthString();
   62|     19|        int randomState = static_cast<int>(randomInput.size() % 100); // Example of deriving a state from the random input
   63|     19|        Gfx::opSetExtGState(&obj, randomState);
   64|     19|    }
   65|     32|auto end_target = std::chrono::high_resolution_clock::now();
   66|     32|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   67|       |
   68|     32|    return 0;
   69|     32|}
_ZN6Object8setStateEi:
   18|    282|    void setState(int newState) {
   19|    282|        state = newState;
   20|    282|    }
_ZN6ObjectC2Ev:
   15|     32|    Object() : state(0) {} // Initialize state to 0

