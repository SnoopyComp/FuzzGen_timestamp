LLVMFuzzerTestOneInput:
   27|      3|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   28|      3|auto start_target = std::chrono::high_resolution_clock::now();
   29|       |    // Create a FuzzedDataProvider instance
   30|      3|    FuzzedDataProvider fuzzed_data(data, size);
   31|       |
   32|       |    // Initialize parameters for GfxState
   33|      3|    int param1 = fuzzed_data.ConsumeIntegral<int>(); // Example parameter
   34|      3|    float param2 = fuzzed_data.ConsumeFloatingPoint<float>(); // Example parameter
   35|       |
   36|       |    // Create an instance of GfxState
   37|      3|    GfxState gfxState(param1, param2);
   38|       |
   39|       |    // Call the function under test
   40|      3|    SplashOutputDev splashOutputDev;
   41|      3|	auto start_func = std::chrono::high_resolution_clock::now();
   42|      3|    splashOutputDev.doUpdateFont(&gfxState);
   43|      3|	auto end_func = std::chrono::high_resolution_clock::now();
   44|      3|auto end_target = std::chrono::high_resolution_clock::now();
   45|      3|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   46|       |
   47|      3|    return 0;
   48|      3|}
_ZN8GfxStateC2Eif:
   14|      3|    GfxState(int param1, float param2) {
   15|       |        // Initialize members based on parameters
   16|      3|    }
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   22|      3|    void doUpdateFont(GfxState *state) {
   23|       |        // Function implementation
   24|      3|    }

