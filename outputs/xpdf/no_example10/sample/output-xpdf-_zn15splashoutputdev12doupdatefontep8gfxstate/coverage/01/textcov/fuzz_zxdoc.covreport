LLVMFuzzerTestOneInput:
   29|     22|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   30|     22|auto start_target = std::chrono::high_resolution_clock::now();
   31|     22|    FuzzedDataProvider fuzzed_data(data, size);
   32|       |
   33|       |    // Initialize parameters for GfxState
   34|     22|    int fontSize = fuzzed_data.ConsumeIntegralInRange<int>(1, 100); // Non-zero font size
   35|     22|    std::string fontDataString = fuzzed_data.ConsumeRandomLengthString(256); // Non-empty font data string
   36|     22|    std::vector<uint8_t> fontData(fontDataString.begin(), fontDataString.end()); // Convert string to vector<uint8_t>
   37|       |
   38|       |    // Create an instance of GfxState
   39|     22|    GfxState gfxState(fontSize, fontData);
   40|       |
   41|       |    // Create an instance of SplashOutputDev
   42|     22|    SplashOutputDev splashOutputDev;
   43|       |
   44|       |    // Call the function under test
   45|     22|	auto start_func = std::chrono::high_resolution_clock::now();
   46|     22|    splashOutputDev.doUpdateFont(&gfxState);
   47|     22|	auto end_func = std::chrono::high_resolution_clock::now();
   48|     22|auto end_target = std::chrono::high_resolution_clock::now();
   49|     22|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   50|       |
   51|     22|    return 0;
   52|     22|}
_ZN8GfxStateC2EiRKNSt3__16vectorIhNS0_9allocatorIhEEEE:
   17|     22|    GfxState(int size, const std::vector<uint8_t>& data) : fontSize(size), fontData(data) {}
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   23|     22|    void doUpdateFont(GfxState *gfxState) {
   24|       |        // Function implementation
   25|     22|    } // Added missing semicolon here

