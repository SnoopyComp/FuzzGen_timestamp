LLVMFuzzerTestOneInput:
   31|      3|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   32|      3|auto start_target = std::chrono::high_resolution_clock::now();
   33|      3|    FuzzedDataProvider stream(data, size);
   34|       |    
   35|       |    // Create an instance of SplashOutputDev
   36|      3|    SplashOutputDev splashOutputDev;
   37|       |
   38|       |    // Initialize GfxState
   39|      3|    GfxState gfxState;
   40|       |
   41|       |    // Consume data to initialize members of GfxState
   42|      3|    gfxState.some_value = stream.ConsumeIntegral<int>();
   43|      3|    gfxState.another_value = stream.ConsumeFloatingPoint<float>();
   44|       |
   45|       |    // Call the function under test
   46|      3|	auto start_func = std::chrono::high_resolution_clock::now();
   47|      3|    splashOutputDev.doUpdateFont(&gfxState);
   48|      3|	auto end_func = std::chrono::high_resolution_clock::now();
   49|      3|auto end_target = std::chrono::high_resolution_clock::now();
   50|      3|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   51|       |
   52|      3|    return 0;
   53|      3|}
_ZN8GfxStateC2Ev:
   17|      3|    GfxState() : some_value(0), another_value(0.0f) {}
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   22|      3|    void doUpdateFont(GfxState *state) {
   23|       |        // Implementation of doUpdateFont
   24|       |        // This is just a placeholder for the actual implementation
   25|      3|        if (state) {
  ------------------
  |  Branch (25:13): [True: 3, False: 0]
  ------------------
   26|      3|            state->some_value += 1; // Example operation
   27|      3|        }
   28|      3|    }

