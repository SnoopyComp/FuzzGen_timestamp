_ZN3Gfx14opSetExtGStateEPNS_6ObjectEi:
   30|     23|    void opSetExtGState(Object *obj, int state) {
   31|       |        // Example implementation that modifies the object based on state
   32|     23|        if (obj) {
  ------------------
  |  Branch (32:13): [True: 23, False: 0]
  ------------------
   33|     23|            obj->id = state; // Set the object's id to the state value
   34|       |            // Additional logic can be added here
   35|     23|        }
   36|     23|    }
LLVMFuzzerTestOneInput:
   39|     23|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   40|     23|auto start_target = std::chrono::high_resolution_clock::now();//erase
   41|       |    // Create a FuzzedDataProvider to consume the input data
   42|     23|    FuzzedDataProvider stream(data, size);
   43|       |
   44|       |    // Create an Object instance with fuzzed data
   45|     23|    int id = stream.ConsumeIntegral<int>(); // Fuzzed id
   46|     23|    std::string name = stream.ConsumeRandomLengthString(49); // Random string for name, max length 49
   47|     23|    Gfx::Object obj(id, name.c_str()); // Initialize Object with fuzzed values
   48|       |
   49|       |    // Consume an integer for the state parameter
   50|     23|    int state = stream.ConsumeIntegral<int>(); // Fuzzed state
   51|       |
   52|       |    // Call the function under test
   53|     23|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   54|     23|    Gfx::opSetExtGState(&obj, state);
   55|     23|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   56|     23|auto end_target = std::chrono::high_resolution_clock::now();//erase
   57|     23|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   58|       |
   59|     23|    return 0;
   60|     23|}
_ZN3Gfx6ObjectC2EiPKc:
   24|     23|        Object(int id, const char* name) : id(id) {
   25|     23|            strncpy(this->name, name, sizeof(this->name) - 1);
   26|     23|            this->name[sizeof(this->name) - 1] = '\0'; // Ensure null-termination
   27|     23|        }

