_ZN3Gfx14opSetExtGStateEPNS_6ObjectEi:
   31|     24|    void opSetExtGState(Object *obj, int state) {
   32|       |        // Example implementation that modifies the object based on the state
   33|     24|        obj->id = state; // Set the object's id to the state value
   34|       |        // Optionally modify the name or perform other operations
   35|     24|    }
LLVMFuzzerTestOneInput:
   38|     24|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   39|     24|auto start_target = std::chrono::high_resolution_clock::now();//erase
   40|       |    // Create a FuzzedDataProvider to consume the input data
   41|     24|    FuzzedDataProvider stream(data, size);
   42|       |
   43|       |    // Create an Object instance with fuzzed data
   44|     24|    int id = stream.ConsumeIntegral<int>(); // Fuzzed id
   45|     24|    std::string name = stream.ConsumeRandomLengthString(49); // Random string of length up to 49
   46|     24|    Gfx::Object obj(id, name.c_str()); // Initialize Object with fuzzed values
   47|       |
   48|       |    // Consume an integer for the state parameter
   49|     24|    int state = stream.ConsumeIntegral<int>(); // Fuzzed state
   50|       |
   51|       |    // Call the function under test
   52|     24|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   53|     24|    Gfx::opSetExtGState(&obj, state);
   54|     24|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   55|     24|auto end_target = std::chrono::high_resolution_clock::now();//erase
   56|     24|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   57|       |
   58|     24|    return 0;
   59|     24|}
_ZN3Gfx6ObjectC2EiPKc:
   25|     24|        Object(int id, const char* name) : id(id) {
   26|     24|            strncpy(this->name, name, sizeof(this->name) - 1);
   27|     24|            this->name[sizeof(this->name) - 1] = '\0'; // Ensure null-termination
   28|     24|        }

