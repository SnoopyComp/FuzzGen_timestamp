LLVMFuzzerTestOneInput:
   26|     16|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   27|     16|auto start_target = std::chrono::high_resolution_clock::now();//erase
   28|     16|    FuzzedDataProvider stream(data, size);
   29|       |
   30|       |    // Initialize parameters for the function
   31|     16|    OutputDev outputDev; // Create an instance of OutputDev (not null)
   32|       |    
   33|     16|    int pageStart = stream.ConsumeIntegralInRange<int>(1, 100); // Page start between 1 and 100
   34|     16|    double x = stream.ConsumeFloatingPoint<double>(); // X coordinate
   35|     16|    double y = stream.ConsumeFloatingPoint<double>(); // Y coordinate
   36|     16|    int zoom = stream.ConsumeIntegralInRange<int>(1, 10); // Zoom level between 1 and 10
   37|     16|    GBool crop = stream.ConsumeBool(); // Crop flag
   38|     16|    GBool rotate = stream.ConsumeBool(); // Rotate flag
   39|     16|    GBool print = stream.ConsumeBool(); // Print flag
   40|       |
   41|       |    // Create a subroutine type pointer (not null)
   42|     16|    DW_TAG_subroutine_typeInfinite_loop subroutineType;
   43|     16|    DW_TAG_subroutine_typeInfinite_loop *subroutinePtr = &subroutineType;
   44|       |
   45|       |    // Additional integer parameters
   46|     16|    int param1 = stream.ConsumeIntegral<int>(); // Additional parameter
   47|     16|    int param2 = stream.ConsumeIntegral<int>(); // Additional parameter
   48|     16|    int param3 = stream.ConsumeIntegral<int>(); // Additional parameter
   49|     16|    int param4 = stream.ConsumeIntegral<int>(); // Additional parameter
   50|       |
   51|       |    // Call the function under test
   52|     16|    PDFDoc pdfDoc;
   53|     16|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   54|     16|    pdfDoc.displayPageSlice(&outputDev, pageStart, x, y, zoom, crop, rotate, print, param1, param2, param3, param4, subroutinePtr, nullptr);
   55|     16|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   56|     16|auto end_target = std::chrono::high_resolution_clock::now();//erase
   57|     16|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   58|       |
   59|     16|    return 0;
   60|     16|}
_ZN6PDFDoc16displayPageSliceEP9OutputDeviddibbbiiiiPiPv:
   20|     16|    void displayPageSlice(OutputDev *outputDev, int pageStart, double x, double y, int zoom, GBool crop, GBool rotate, GBool print, int param1, int param2, int param3, int param4, DW_TAG_subroutine_typeInfinite_loop *subroutine, void *userData) {
   21|       |        // Placeholder for the actual implementation
   22|       |        // This would contain logic to handle the page display
   23|     16|    }

