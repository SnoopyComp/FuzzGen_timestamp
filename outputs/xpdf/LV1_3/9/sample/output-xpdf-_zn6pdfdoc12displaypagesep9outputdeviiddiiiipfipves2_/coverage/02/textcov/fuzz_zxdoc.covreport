LLVMFuzzerTestOneInput:
   25|     10|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   26|     10|auto start_target = std::chrono::high_resolution_clock::now();//erase
   27|     10|    FuzzedDataProvider stream(data, size);
   28|       |
   29|       |    // Initialize parameters for the function
   30|     10|    OutputDev outputDev; // Create an instance of OutputDev (not null)
   31|       |    
   32|     10|    int pageStart = stream.ConsumeIntegralInRange<int>(1, 100); // Page start between 1 and 100
   33|     10|    int pageEnd = stream.ConsumeIntegralInRange<int>(1, 100); // Page end between 1 and 100
   34|     10|    double x = stream.ConsumeFloatingPoint<double>(); // X coordinate
   35|     10|    double y = stream.ConsumeFloatingPoint<double>(); // Y coordinate
   36|     10|    int zoom = stream.ConsumeIntegralInRange<int>(1, 10); // Zoom level between 1 and 10
   37|     10|    GBool crop = stream.ConsumeBool(); // Crop flag
   38|     10|    GBool rotate = stream.ConsumeBool(); // Rotate flag
   39|     10|    GBool print = stream.ConsumeBool(); // Print flag
   40|       |    
   41|       |    // Create a subroutine type pointer (not null)
   42|     10|    DW_TAG_subroutine_typeInfinite_loop subroutineType;
   43|     10|    DW_TAG_subroutine_typeInfinite_loop *subroutinePtr = &subroutineType;
   44|       |
   45|       |    // Pointer to void, can be initialized to nullptr or some valid data
   46|     10|    void *userData = nullptr; // Assuming this can be null for the test
   47|       |
   48|       |    // Call the function under test
   49|     10|    PDFDoc pdfDoc;
   50|     10|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   51|     10|    pdfDoc.displayPages(&outputDev, pageStart, pageEnd, x, y, zoom, crop, rotate, print, subroutinePtr, userData);
   52|     10|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   53|     10|auto end_target = std::chrono::high_resolution_clock::now();//erase
   54|     10|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   55|       |
   56|     10|    return 0;
   57|     10|}
_ZN6PDFDoc12displayPagesEP9OutputDeviiddibbbPiPv:
   20|     10|    void displayPages(OutputDev *outputDev, int pageStart, int pageEnd, double x, double y, int zoom, GBool crop, GBool rotate, GBool print, DW_TAG_subroutine_typeInfinite_loop *subroutine, void *userData) {
   21|       |        // Placeholder for the actual implementation
   22|     10|    }

