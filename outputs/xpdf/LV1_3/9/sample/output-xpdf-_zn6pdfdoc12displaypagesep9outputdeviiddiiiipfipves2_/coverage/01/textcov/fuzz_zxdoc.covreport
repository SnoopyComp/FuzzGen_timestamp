LLVMFuzzerTestOneInput:
   27|      9|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   28|      9|auto start_target = std::chrono::high_resolution_clock::now();//erase
   29|      9|    FuzzedDataProvider stream(data, size);
   30|       |
   31|       |    // Initialize parameters for the function
   32|      9|    OutputDev outputDev; // Create an instance of OutputDev (not null)
   33|       |    
   34|      9|    int pageStart = stream.ConsumeIntegralInRange<int>(1, 100); // Page start between 1 and 100
   35|      9|    int pageEnd = stream.ConsumeIntegralInRange<int>(1, 100); // Page end between 1 and 100
   36|      9|    double x = stream.ConsumeFloatingPoint<double>(); // X coordinate
   37|      9|    double y = stream.ConsumeFloatingPoint<double>(); // Y coordinate
   38|      9|    int zoom = stream.ConsumeIntegralInRange<int>(1, 10); // Zoom level between 1 and 10
   39|      9|    GBool crop = stream.ConsumeBool(); // Crop flag
   40|      9|    GBool rotate = stream.ConsumeBool(); // Rotate flag
   41|      9|    GBool print = stream.ConsumeBool(); // Print flag
   42|       |    
   43|       |    // Create a subroutine type pointer (not null)
   44|      9|    DW_TAG_subroutine_typeInfinite_loop subroutineType; // Non-null instance
   45|      9|    DW_TAG_subroutine_typeInfinite_loop *subroutinePtr = &subroutineType;
   46|       |
   47|       |    // Pointer to void, can be initialized to nullptr or some valid data
   48|      9|    void *userData = nullptr; // Assuming this can be null for the test
   49|       |
   50|       |    // Call the function under test
   51|      9|    PDFDoc pdfDoc;
   52|      9|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   53|      9|    pdfDoc.displayPages(&outputDev, pageStart, pageEnd, x, y, zoom, crop, rotate, print, subroutinePtr, userData);
   54|      9|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   55|      9|auto end_target = std::chrono::high_resolution_clock::now();//erase
   56|      9|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   57|       |
   58|      9|    return 0;
   59|      9|}
_ZN6PDFDoc12displayPagesEP9OutputDeviiddibbbPiPv:
   20|      9|    void displayPages(OutputDev *outputDev, int pageStart, int pageEnd, double x, double y, int zoom, GBool crop, GBool rotate, GBool print, DW_TAG_subroutine_typeInfinite_loop *subroutine, void *userData) {
   21|       |        // Placeholder for the actual implementation
   22|       |        // For example, just printing the parameters (in a real implementation, this would do something meaningful)
   23|      9|        printf("Displaying pages from %d to %d at zoom %d\n", pageStart, pageEnd, zoom);
   24|      9|    }

