_ZN6PDFDoc12displayPagesEP9OutputDeviiddibbbPiPv:
   22|      4|void PDFDoc::displayPages(OutputDev *outputDev, int pageStart, int pageEnd, double x, double y, int flags, GBool render, GBool annotate, GBool compress, DW_TAG_subroutine_typeInfinite *subroutine, void *userData) {
   23|       |    // Function implementation
   24|      4|}
LLVMFuzzerTestOneInput:
   26|     25|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   27|     25|auto start_target = std::chrono::high_resolution_clock::now();//erase
   28|     25|    FuzzedDataProvider fuzzed_data(data, size);
   29|       |
   30|       |    // Initialize parameters
   31|     25|    OutputDev outputDev; // Create an instance of OutputDev
   32|     25|    int pageStart = fuzzed_data.ConsumeIntegralInRange<int>(1, 100); // Assuming pages range from 1 to 100
   33|     25|    int pageEnd = fuzzed_data.ConsumeIntegralInRange<int>(pageStart, 100); // Ensure pageEnd is >= pageStart
   34|     25|    double x = fuzzed_data.ConsumeFloatingPoint<double>(); // Any double value
   35|     25|    double y = fuzzed_data.ConsumeFloatingPoint<double>(); // Any double value
   36|     25|    int flags = fuzzed_data.ConsumeIntegral<int>(); // Any integer flags
   37|     25|    GBool render = fuzzed_data.ConsumeBool(); // Random boolean value
   38|     25|    GBool annotate = fuzzed_data.ConsumeBool(); // Random boolean value
   39|     25|    GBool compress = fuzzed_data.ConsumeBool(); // Random boolean value
   40|       |
   41|       |    // Consume a pointer for DW_TAG_subroutine_typeInfinite
   42|     25|    std::string subroutineData = fuzzed_data.ConsumeRandomLengthString(sizeof(DW_TAG_subroutine_typeInfinite));
   43|     25|    if (subroutineData.size() != sizeof(DW_TAG_subroutine_typeInfinite)) {
  ------------------
  |  Branch (43:9): [True: 21, False: 4]
  ------------------
   44|     21|        return 0; // Invalid size, do not proceed
   45|     21|    }
   46|      4|    DW_TAG_subroutine_typeInfinite *subroutine = reinterpret_cast<DW_TAG_subroutine_typeInfinite*>(const_cast<char*>(subroutineData.data()));
   47|       |    
   48|       |    // Correctly consume remaining bytes for userData
   49|      4|    std::vector<uint8_t> userDataBytes = fuzzed_data.ConsumeBytes<uint8_t>(fuzzed_data.remaining_bytes());
   50|      4|    void *userData = userDataBytes.empty() ? nullptr : userDataBytes.data(); // Pointer to remaining bytes or nullptr if empty
  ------------------
  |  Branch (50:22): [True: 3, False: 1]
  ------------------
   51|       |
   52|       |    // Call the function under test
   53|      4|    PDFDoc pdfDoc; // Create an instance of PDFDoc
   54|      4|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   55|      4|    pdfDoc.displayPages(&outputDev, pageStart, pageEnd, x, y, flags, render, annotate, compress, subroutine, userData);
   56|      4|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   57|      4|auto end_target = std::chrono::high_resolution_clock::now();//erase
   58|      4|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   59|       |
   60|      4|    return 0;
   61|     25|}

