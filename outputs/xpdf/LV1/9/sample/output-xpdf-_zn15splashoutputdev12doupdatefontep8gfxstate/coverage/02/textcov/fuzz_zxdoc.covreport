LLVMFuzzerTestOneInput:
   29|      4|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   30|      4|auto start_target = std::chrono::high_resolution_clock::now();//erase
   31|      4|    FuzzedDataProvider stream(data, size);
   32|       |
   33|       |    // Create an instance of GfxState
   34|      4|    GfxState gfxState;
   35|       |
   36|       |    // Consume data to initialize gfxState members
   37|      4|    gfxState.fontSize = stream.ConsumeIntegral<int>();
   38|       |
   39|       |    // Consume a string for fontName, ensuring it fits the buffer
   40|      4|    std::string fontName = stream.ConsumeBytesAsString(sizeof(gfxState.fontName) - 1);
   41|      4|    std::strncpy(gfxState.fontName, fontName.c_str(), sizeof(gfxState.fontName) - 1);
   42|      4|    gfxState.fontName[sizeof(gfxState.fontName) - 1] = '\0'; // Ensure null-termination
   43|       |
   44|       |    // Create an instance of SplashOutputDev
   45|      4|    SplashOutputDev splashOutputDev;
   46|       |
   47|       |    // Call the function under test
   48|      4|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   49|      4|    splashOutputDev.doUpdateFont(&gfxState);
   50|      4|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   51|      4|auto end_target = std::chrono::high_resolution_clock::now();//erase
   52|      4|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   53|       |
   54|      4|    return 0;
   55|      4|}
_ZN8GfxStateC2Ev:
   17|      4|    GfxState() : fontSize(0) {
   18|      4|        std::memset(fontName, 0, sizeof(fontName));
   19|      4|    }
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   24|      4|    void doUpdateFont(GfxState *gfxState) {
   25|       |        // Function implementation (not provided)
   26|      4|    }

