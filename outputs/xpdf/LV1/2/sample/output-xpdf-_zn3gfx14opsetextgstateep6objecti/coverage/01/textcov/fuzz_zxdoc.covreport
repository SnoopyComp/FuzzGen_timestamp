_ZN3Gfx14opSetExtGStateEP6Objecti:
   18|      3|    void opSetExtGState(Object *obj, int state) {
   19|       |        // Function implementation (not provided)
   20|       |        // For the purpose of fuzzing, we will assume this function does something with the state
   21|      3|    }
LLVMFuzzerTestOneInput:
   24|      3|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   25|      3|auto start_target = std::chrono::high_resolution_clock::now();//erase
   26|       |    // Create a FuzzedDataProvider to consume the input data
   27|      3|    FuzzedDataProvider fuzzed_data(data, size);
   28|       |
   29|       |    // Create an instance of Object (ensuring it's not null)
   30|      3|    Object obj;
   31|       |
   32|       |    // Consume an integer value for the state parameter
   33|       |    // Use a wider range of integers to maximize fuzzing coverage
   34|      3|    int state = fuzzed_data.ConsumeIntegral<int>();
   35|       |
   36|       |    // Optionally consume additional data to provide more parameters if needed
   37|       |    // For example, let's assume we want to test with a float parameter as well
   38|      3|    float another_param = fuzzed_data.ConsumeFloatingPoint<float>();
   39|       |
   40|       |    // Call the function under test with multiple parameters to increase coverage
   41|      3|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   42|      3|    Gfx::opSetExtGState(&obj, state);
   43|      3|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   44|       |
   45|       |    // If the function can take more parameters, you can uncomment the next line
   46|       |    // Gfx::opSetExtGState(&obj, state, another_param);
   47|      3|auto end_target = std::chrono::high_resolution_clock::now();//erase
   48|      3|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   49|       |
   50|      3|    return 0;
   51|      3|}
_ZN6ObjectC2Ev:
   13|      3|    Object() {}

