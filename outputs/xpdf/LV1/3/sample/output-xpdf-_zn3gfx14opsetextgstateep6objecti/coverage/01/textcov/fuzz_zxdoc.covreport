_ZN3Gfx14opSetExtGStateEP6Objecti:
   27|     36|    void opSetExtGState(Object *obj, int state) {
   28|       |        // Implementation of the function
   29|     36|        if (obj != nullptr) {
  ------------------
  |  Branch (29:13): [True: 36, False: 0]
  ------------------
   30|       |            // Modify the object's state based on the input
   31|     36|            obj->setState(state);
   32|     36|        }
   33|     36|    }
LLVMFuzzerTestOneInput:
   36|      3|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   37|      3|auto start_target = std::chrono::high_resolution_clock::now();//erase
   38|       |    // Create a FuzzedDataProvider instance with the input data
   39|      3|    FuzzedDataProvider fuzzed_data(data, size);
   40|       |
   41|       |    // Create an Object instance (not NULL)
   42|      3|    Object obj;
   43|       |
   44|       |    // Consume an integer value for the first call to the function
   45|      3|    int state = fuzzed_data.ConsumeIntegralInRange<int>(
   46|      3|        std::numeric_limits<int>::min(), std::numeric_limits<int>::max()
   47|      3|    );
   48|       |
   49|       |    // Call the function under test with the first state
   50|      3|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   51|      3|    Gfx::opSetExtGState(&obj, state);
   52|      3|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   53|       |
   54|       |    // Consume another integer value for the second call to the function
   55|      3|    int additionalState = fuzzed_data.ConsumeIntegralInRange<int>(
   56|      3|        std::numeric_limits<int>::min(), std::numeric_limits<int>::max()
   57|      3|    );
   58|       |
   59|       |    // Call the function again with a different state
   60|      3|    Gfx::opSetExtGState(&obj, additionalState);
   61|       |
   62|       |    // Optionally, you can also add more calls with varying states to increase coverage
   63|     33|    for (int i = 0; i < 10; ++i) {
  ------------------
  |  Branch (63:21): [True: 30, False: 3]
  ------------------
   64|     30|        int randomState = fuzzed_data.ConsumeIntegralInRange<int>(
   65|     30|            std::numeric_limits<int>::min(), std::numeric_limits<int>::max()
   66|     30|        );
   67|     30|        Gfx::opSetExtGState(&obj, randomState);
   68|     30|    }
   69|      3|auto end_target = std::chrono::high_resolution_clock::now();//erase
   70|      3|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   71|       |
   72|      3|    return 0;
   73|      3|}
_ZN6Object8setStateEi:
   21|     36|    void setState(int newState) {
   22|     36|        state = newState; // Set the object's state
   23|     36|    }
_ZN6ObjectC2Ev:
   17|      3|    Object() : state(0) {
   18|       |        // Initialize Object as needed
   19|      3|    }

