LLVMFuzzerTestOneInput:
   34|     24|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   35|     24|auto start_target = std::chrono::high_resolution_clock::now();//erase
   36|       |    // Create a FuzzedDataProvider to consume the input data
   37|     24|    FuzzedDataProvider fuzzed_data(data, size);
   38|       |
   39|       |    // Initialize a GfxState object
   40|     24|    GfxState gfxState;
   41|       |
   42|       |    // Consume a random length string to set font data in GfxState
   43|     24|    std::string fontDataString = fuzzed_data.ConsumeRandomLengthString();
   44|     24|    std::vector<uint8_t> fontData(fontDataString.begin(), fontDataString.end());
   45|       |
   46|       |    // Validate that fontData is not empty
   47|     24|    if (fontData.empty()) {
  ------------------
  |  Branch (47:9): [True: 3, False: 21]
  ------------------
   48|      3|        return 0; // Skip this iteration if the fontData is empty
   49|      3|    }
   50|       |
   51|     21|    gfxState.setFontData(fontData);
   52|       |
   53|       |    // Call the function under test
   54|     21|    SplashOutputDev splashOutputDev;
   55|     21|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   56|     21|    splashOutputDev.doUpdateFont(&gfxState);
   57|     21|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   58|     21|auto end_target = std::chrono::high_resolution_clock::now();//erase
   59|     21|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   60|       |
   61|     21|    return 0;
   62|     24|}
_ZN8GfxStateC2Ev:
   16|     24|    GfxState() {}
_ZN8GfxState11setFontDataERKNSt3__16vectorIhNS0_9allocatorIhEEEE:
   19|     21|    void setFontData(const std::vector<uint8_t>& fontData) {
   20|       |        // Simulate setting font data
   21|       |        // This is just a placeholder for whatever logic you might have
   22|     21|    }
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   28|     21|    void doUpdateFont(GfxState *state) {
   29|       |        // Implementation of the function (not shown here)
   30|       |        // For this example, we assume it uses the state in some way
   31|     21|    }

