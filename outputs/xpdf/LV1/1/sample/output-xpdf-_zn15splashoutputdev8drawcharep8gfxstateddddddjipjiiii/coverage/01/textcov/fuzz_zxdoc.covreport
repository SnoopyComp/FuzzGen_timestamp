LLVMFuzzerTestOneInput:
   27|     52|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   28|     52|auto start_target = std::chrono::high_resolution_clock::now();//erase
   29|     52|    FuzzedDataProvider stream(data, size);
   30|       |
   31|       |    // Initialize parameters
   32|     52|    GfxState gfxState; // Create a GfxState instance
   33|     52|    double x = stream.ConsumeFloatingPoint<double>();
   34|     52|    double y = stream.ConsumeFloatingPoint<double>();
   35|     52|    double width = stream.ConsumeFloatingPoint<double>();
   36|     52|    double height = stream.ConsumeFloatingPoint<double>();
   37|     52|    double xOffset = stream.ConsumeFloatingPoint<double>();
   38|     52|    double yOffset = stream.ConsumeFloatingPoint<double>();
   39|     52|    CharCode charCode = stream.ConsumeIntegral<CharCode>();
   40|     52|    int fontSize = stream.ConsumeIntegral<int>();
   41|       |    
   42|       |    // Unicode handling
   43|     52|    size_t unicodeSize = stream.ConsumeIntegralInRange<size_t>(1, 100); // Ensure non-zero size
   44|     52|    std::string unicodeData = stream.ConsumeRandomLengthString(unicodeSize); // Use ConsumeRandomLengthString
   45|     52|    if (unicodeData.size() != unicodeSize) {
  ------------------
  |  Branch (45:9): [True: 50, False: 2]
  ------------------
   46|     50|        return 0; // Validate size
   47|     50|    }
   48|      2|    Unicode *unicode = reinterpret_cast<Unicode*>(unicodeData.data()); // Cast to Unicode pointer
   49|       |
   50|      2|    GBool flag1 = stream.ConsumeBool();
   51|      2|    GBool flag2 = stream.ConsumeBool();
   52|      2|    GBool flag3 = stream.ConsumeBool();
   53|       |
   54|       |    // Call the function under test
   55|      2|    SplashOutputDev splashOutputDev;
   56|      2|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   57|      2|    splashOutputDev.drawChar(&gfxState, x, y, width, height, xOffset, yOffset, charCode, fontSize, unicode, unicodeSize, flag1, flag2, flag3);
   58|      2|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   59|      2|auto end_target = std::chrono::high_resolution_clock::now();//erase
   60|      2|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   61|       |
   62|      2|    return 0;
   63|     52|}
_ZN15SplashOutputDev8drawCharEP8GfxStateddddddjiP7Unicodeibbb:
   21|      2|                  Unicode *unicode, int unicodeSize, GBool flag1, GBool flag2, GBool flag3) {
   22|       |        // Function implementation
   23|      2|    }

