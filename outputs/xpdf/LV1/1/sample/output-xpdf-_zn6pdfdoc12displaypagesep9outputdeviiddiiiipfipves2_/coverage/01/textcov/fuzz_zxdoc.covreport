LLVMFuzzerTestOneInput:
   25|     10|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   26|     10|auto start_target = std::chrono::high_resolution_clock::now();//erase
   27|     10|    FuzzedDataProvider stream(data, size);
   28|       |
   29|       |    // Initialize parameters for the function call
   30|     10|    OutputDev outputDev; // Assuming default constructor is valid
   31|     10|    int pageStart = stream.ConsumeIntegralInRange<int>(1, 100); // Assuming valid page range
   32|     10|    int pageEnd = stream.ConsumeIntegralInRange<int>(pageStart, 100); // Ensure pageEnd is >= pageStart
   33|     10|    double xPos = stream.ConsumeFloatingPoint<double>();
   34|     10|    double yPos = stream.ConsumeFloatingPoint<double>();
   35|     10|    int rotation = stream.ConsumeIntegralInRange<int>(0, 360); // Degrees of rotation
   36|     10|    GBool crop = stream.ConsumeBool();
   37|     10|    GBool print = stream.ConsumeBool();
   38|     10|    GBool embed = stream.ConsumeBool();
   39|       |    
   40|       |    // Create a pointer to the infinite loop type
   41|     10|    DW_TAG_subroutine_typeInfiniteLoop loop; // Assuming default constructor is valid
   42|     10|    std::vector<uint8_t> userDataBytes = stream.ConsumeRemainingBytes<uint8_t>(); // Use remaining bytes as userData
   43|     10|    void *userData = userDataBytes.data(); // Get the pointer to the data
   44|       |
   45|       |    // Call the function under test
   46|     10|    PDFDoc pdfDoc; // Create an instance of PDFDoc
   47|     10|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   48|     10|    pdfDoc.displayPages(&outputDev, pageStart, pageEnd, xPos, yPos, rotation, crop, print, embed, &loop, userData);
   49|     10|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   50|     10|auto end_target = std::chrono::high_resolution_clock::now();//erase
   51|     10|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   52|       |
   53|     10|    return 0;
   54|     10|}
_ZN6PDFDoc12displayPagesEP9OutputDeviiddibbbPiPv:
   19|     10|    void displayPages(OutputDev *outputDev, int pageStart, int pageEnd, double xPos, double yPos, int rotation, GBool crop, GBool print, GBool embed, DW_TAG_subroutine_typeInfiniteLoop *loop, void *userData) {
   20|       |        // Function implementation...
   21|       |        // For demonstration, we can print the parameters to ensure they are being called
   22|     10|    }

