LLVMFuzzerTestOneInput:
   29|     34|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   30|     34|auto start_target = std::chrono::high_resolution_clock::now();//erase
   31|     34|    FuzzedDataProvider stream(data, size);
   32|       |
   33|       |    // Create an instance of SplashOutputDev
   34|     34|    SplashOutputDev splashOutputDev;
   35|       |
   36|       |    // Initialize GfxState
   37|     34|    GfxState gfxState;
   38|       |
   39|       |    // Consume data to fill GfxState members
   40|     34|    gfxState.some_integer = stream.ConsumeIntegral<int>();
   41|     34|    gfxState.some_float = stream.ConsumeFloatingPoint<float>();
   42|       |
   43|       |    // Consume a random length for some_data
   44|     34|    size_t data_length = stream.ConsumeIntegralInRange<size_t>(1, 1024); // Avoid 0 length
   45|     34|    std::string random_data = stream.ConsumeRandomLengthString(data_length);
   46|       |
   47|       |    // Validate the size of the consumed data
   48|     34|    if (random_data.size() != data_length) {
  ------------------
  |  Branch (48:9): [True: 24, False: 10]
  ------------------
   49|     24|        return 0; // Size mismatch, do not proceed
   50|     24|    }
   51|       |    
   52|       |    // Convert the string to a vector of uint8_t
   53|     10|    gfxState.some_data.assign(random_data.begin(), random_data.end());
   54|       |
   55|       |    // Call the function under test
   56|     10|	auto start_func = std::chrono::high_resolution_clock::now();//erase
   57|     10|    splashOutputDev.doUpdateFont(&gfxState);
   58|     10|	auto end_func = std::chrono::high_resolution_clock::now();//erase
   59|     10|auto end_target = std::chrono::high_resolution_clock::now();//erase
   60|     10|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;//erase
   61|       |
   62|     10|    return 0;
   63|     34|}
_ZN8GfxStateC2Ev:
   18|     34|    GfxState() : some_integer(0), some_float(0.0f) {}
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   24|     10|    void doUpdateFont(GfxState *gfxState) {
   25|       |        // Implementation of the method
   26|     10|    } // Added missing semicolon here

