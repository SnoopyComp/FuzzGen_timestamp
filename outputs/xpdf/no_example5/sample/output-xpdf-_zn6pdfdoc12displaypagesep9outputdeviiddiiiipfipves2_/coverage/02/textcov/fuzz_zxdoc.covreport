LLVMFuzzerTestOneInput:
   27|     11|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   28|     11|auto start_target = std::chrono::high_resolution_clock::now();
   29|     11|    FuzzedDataProvider stream(data, size);
   30|       |
   31|       |    // Create an instance of OutputDev
   32|     11|    OutputDev outputDev;
   33|       |
   34|       |    // Consume parameters for the function
   35|     11|    int pageStart = stream.ConsumeIntegralInRange<int>(1, 100); // Assuming page numbers are between 1 and 100
   36|     11|    int pageEnd = stream.ConsumeIntegralInRange<int>(pageStart, 100); // Ensure pageEnd is >= pageStart
   37|     11|    double x = stream.ConsumeFloatingPoint<double>(); // X coordinate
   38|     11|    double y = stream.ConsumeFloatingPoint<double>(); // Y coordinate
   39|     11|    int zoom = stream.ConsumeIntegralInRange<int>(1, 10); // Zoom level between 1 and 10
   40|     11|    GBool rotate = stream.ConsumeBool(); // Rotation flag
   41|     11|    GBool crop = stream.ConsumeBool(); // Crop flag
   42|     11|    GBool useCache = stream.ConsumeBool(); // Use cache flag
   43|       |
   44|       |    // Create a subroutine type instance
   45|     11|    DW_TAG_subroutine_typeInfinite subroutine;
   46|       |
   47|       |    // Call the function to fuzz
   48|     11|    PDFDoc doc; // Assuming PDFDoc is defined somewhere
   49|     11|	auto start_func = std::chrono::high_resolution_clock::now();
   50|     11|    doc.displayPages(&outputDev, pageStart, pageEnd, x, y, zoom, rotate, crop, useCache, &subroutine, nullptr);
   51|     11|	auto end_func = std::chrono::high_resolution_clock::now();
   52|     11|auto end_target = std::chrono::high_resolution_clock::now();
   53|     11|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   54|       |
   55|     11|    return 0;
   56|     11|}
_ZN6PDFDoc12displayPagesEP9OutputDeviiddibbbP30DW_TAG_subroutine_typeInfinitePv:
   22|     11|    void displayPages(OutputDev *outputDev, int pageStart, int pageEnd, double x, double y, int zoom, GBool rotate, GBool crop, GBool useCache, DW_TAG_subroutine_typeInfinite *subroutine, void *userData) {
   23|       |        // Function implementation (placeholder)
   24|     11|    }

